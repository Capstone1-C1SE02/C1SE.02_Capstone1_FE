import React, { useState, useEffect } from "react";
import axios from "axios";
import axiosConfig from "@/axiosConfig";
import { LearningStatusType } from "@/components/dropList";

function StudentList({ onSelectStudent }) {
  const [students, setStudents] = useState([]);
  const [studentss, setStudentss] = useState([]);

  useEffect(() => {
    const fetchData = async () => {
      try {
        const learningStatus = await LearningStatusType();
        setStudentss(learningStatus.data);
      } catch (error) {
        console.log(error);
      }
    };
    fetchData();
  }, []);

  console.log("studentss", studentss);
  useEffect(() => {
    const fetchStudents = async () => {
      try {
        const res = await axiosConfig.get("http://127.0.0.1:8000/api/student");
        setStudents(res.data.results);
      } catch (err) {
        console.error(err);
      }
    };

    fetchStudents();
  }, []);

  const [OC, setOC] = useState();
  const handlOC = () => {
    console.log("OC", OC);
  };

  return (
    <div>
      <h2>Danh Sách Sinh Viên</h2>
      <ul>
        {students.map((student) => (
          <li
            key={student.STUDENT_ID_NUMBER}
            onClick={() => onSelectStudent(student)}
          >
            {student.STUDENT_ID_NUMBER}
          </li>
        ))}
        <select onChange={(e) => setOC(e.target.value)}>
          <option hidden></option>
          {studentss.map((student) => (
            <option key={student.LEARNING_STATUS_TYPE_ID}>
              {student.LEARNING_STATUS_TYPE_NAME}
            </option>
          ))}
        </select>
        <button onClick={handlOC}>ok</button>
      </ul>
    </div>
  );
}

function StudentDetails({ student, onUpdate }) {
  const [formData, setFormData] = useState(student);
  const [error, setError] = useState(null);

  const handleChange = (e) => {
    const { name, value } = e.target;

    // Kiểm tra nếu giá trị là số
    const parsedValue = isNaN(value) ? value : parseInt(value, 10);

    if (name.includes("academicleveltype")) {
      const subName = name.split(".")[1];
      setFormData((prevState) => ({
        ...prevState,
        academicleveltype: {
          ...prevState.academicleveltype,
          [subName]: parsedValue,
        },
      }));
    } else {
      setFormData((prevState) => ({
        ...prevState,
        [name]: parsedValue,
      }));
    }
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    try {
      console.log("formData", formData);
    } catch (err) {
      setError(err.response ? err.response.data : err.message);
    }
  };

  if (!student) return null;

  return (
    <div>
      <h2>Thông Tin Sinh Viên</h2>
      <form onSubmit={handleSubmit}>
        <div>
          <label>Số CMND:</label>
          <input
            type="text"
            name="STUDENT_ID_NUMBER"
            value={formData?.STUDENT_ID_NUMBER}
            onChange={handleChange}
          />
        </div>
        <div>
          <label>Mã Loại Học:</label>
          <input
            type="text"
            name="academicleveltype.ACADEMIC_LEVEL_TYPE_ID"
            value={formData?.academicleveltype?.ACADEMIC_LEVEL_TYPE_ID}
            onChange={handleChange}
          />
        </div>
        <div>
          <label>Tên Loại Học:</label>
          <input
            type="text"
            name="academicleveltype.ACADEMIC_LEVEL_TYPE_NAME"
            value={formData?.academicleveltype?.ACADEMIC_LEVEL_TYPE_NAME}
            onChange={handleChange}
          />
        </div>
        <button type="submit">Cập Nhật</button>
      </form>

      {error && <p>Lỗi: {JSON.stringify(error)}</p>}
    </div>
  );
}

function App() {
  const [selectedStudent, setSelectedStudent] = useState(null);

  console.log(
    "selectedStudentselectedStudent",
    selectedStudent?.STUDENT_ID_NUMBER,
  );
  const handleSelectStudent = (student) => {
    setSelectedStudent(student);
  };

  const handleUpdateStudent = (updatedStudent) => {
    setSelectedStudent(updatedStudent);
  };

  return (
    <div>
      <StudentList onSelectStudent={handleSelectStudent} />
      <StudentDetails
        student={selectedStudent}
        onUpdate={handleUpdateStudent}
      />
    </div>
  );
}

export default App;
